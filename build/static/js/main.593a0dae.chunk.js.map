{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/ShowPersons.js","components/Notification.js","services/persons.js","index.js"],"names":["Filter","props","onChange","PersonForm","onSubmit","value","name","number","type","ShowPersons","persons","search","deletePerson","console","log","filtered","filter","person","toLocaleLowerCase","includes","indexOf","map","key","id","onClick","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","ReactDOM","render","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newSearch","setNewSearch","refresh","setRefresh","setMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","updatePerson","personToUpdate","changedPerson","updatedPerson","catch","error","setTimeout","event","target","preventDefault","personObject","Date","now","find","toLowerCase","window","confirm","returnedPerson","concat","document","getElementById"],"mappings":"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","file":"static/js/main.593a0dae.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => <div>Filter shown with <input onChange={props.onChange}></input></div>\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n    return (\n      <div>\n        <form onSubmit={props.onSubmit}>\n          <div>\n            Name: <input value={props.name} onChange={props.onChange[0]}/>\n          </div>\n          <div>\n            Number: <input value={props.number} onChange={props.onChange[1]}/>\n          </div>\n          <div>\n            <button type=\"submit\">Add</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n\n  export default PersonForm","import React from 'react'\n\nconst ShowPersons = ({persons, search, deletePerson}) => {\n    console.log('PERSONS', persons)\n    const filtered = persons.filter(person => \n      (person.name.toLocaleLowerCase().includes(search) && person.name.toLocaleLowerCase().indexOf(search) < 1))\n      console.log(\"Filtered\", filtered)\n      //\n    return (\n      <div>{filtered.map(person =>\n         <div key={person.id}>\n         {person.name} {person.number} &nbsp;\n          <button onClick={() => deletePerson(person.id)}> Delete</button>\n         </div>)}\n      </div>\n    )\n  }\n\n  export default ShowPersons\n  ","import React from 'react'\n\nconst Notification = ({message, className}) => {\n    if (message === null) return null\n    return (\n      <div className={className}>{message}</div>\n    )\n  }\n\n  export default Notification","import axios from 'axios'\nconst baseUrl = 'api/persons'\n\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response)\n}\n\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport ShowPersons from './components/ShowPersons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\nimport './index.css'\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newSearch, setNewSearch] = useState('')\n  const [ refresh, setRefresh] = useState(0)\n  const [ message, setMessage] = useState(null)\n  const [ errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n    .getAll()\n    .then(initialPersons => {\n      setPersons(initialPersons)})\n  }, [refresh])\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n        name: newName,\n        number: newNumber,\n        id: Date.now()\n    }\n\n    if (persons.find(person => personObject.name.toLowerCase() === person.name.toLowerCase())) {\n       if (window.confirm(`${personObject.name} is already added to phonebook, replace the old number with a new one?`)) {\n         const personToUpdate = persons.find(person => personObject.name.toLowerCase() === person.name.toLowerCase())\n         console.log(personToUpdate)\n          updatePerson(personToUpdate)\n          setMessage(`${personToUpdate.name}'s telephone number was succesfully updated.`)\n          setTimeout(()=> {\n            setMessage(null)\n          }, 5000)\n       }\n    }\n    else {\n        personService\n        .create(personObject)\n        .then(returnedPerson => {\n          console.log(returnedPerson)\n          setPersons(persons.concat(returnedPerson))\n          setMessage(`${returnedPerson.name} was succesfully added to contact list.`)\n          setTimeout(()=> {\n            setMessage(null)\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n         setErrorMessage(`New person could not be added. Make sure name-field & number-field are not empty!`)\n          setTimeout(()=> {\n           setErrorMessage(null)\n           setRefresh(refresh+1)\n        }, 5000)\n      })\n    }\n  }\n\n  const updatePerson = (personToUpdate) => {\n    const changedPerson = { ...personToUpdate, number: newNumber}\n\n    personService\n    .update(changedPerson.id, changedPerson)\n    .then(updatedPerson => {\n      setPersons(persons.map(person => person.id !== personToUpdate ? person : updatedPerson))\n      setRefresh(refresh+1)\n    })\n    .catch(error => {\n      setErrorMessage(`Updating was not succesful.`)\n      setTimeout(()=> {\n        setErrorMessage(null)\n        setRefresh(refresh+1)\n      }, 5000)\n    })\n  }\n\n\n  const deletePerson = (id) => {\n    const person = persons.find(person => person.id === id)\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personService\n      .remove(id)\n      .then(response => {\n        console.log('RESPONSE', response)\n        setRefresh(refresh+1)\n        setMessage(`${person.name} has been succesfully deleted from contact list.`)\n        setTimeout(()=> {\n          setMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setErrorMessage(`Information of ${person.name} has already been removed from the server.`)\n        setTimeout(()=> {\n          setErrorMessage(null)\n          setRefresh(refresh+1)\n        }, 5000)\n      })\n    }\n  }\n\n  const handlePersonChange = (event) => {\n      setNewName(event.target.value) \n  }\n\n  const handleNumberChange = (event) => {\n      setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n      setNewSearch(event.target.value)\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} className={'success'} />\n      <Notification message={errorMessage} className={'error'} />\n      <Filter onChange={handleSearchChange}  />\n      <h3>Add a new</h3>\n      <PersonForm name={newName} number={newNumber} onChange={[handlePersonChange,handleNumberChange]} onSubmit={addPerson}/>\n      <h2>Numbers </h2>\n      <ShowPersons persons={persons} search={newSearch} deletePerson={deletePerson} />\n    </div>\n  )\n\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}